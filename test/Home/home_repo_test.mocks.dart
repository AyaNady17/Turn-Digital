// Mocks generated by Mockito 5.4.5 from annotations
// in turn_digital/test/Home/home_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:turn_digital/Features/Home/Data/Models/get_event_details_response_model.dart'
    as _i3;
import 'package:turn_digital/Features/Home/Data/Models/get_events_list_response_model.dart'
    as _i2;
import 'package:turn_digital/Features/Home/Data/Models/get_organizer_details_reponse_model.dart'
    as _i4;
import 'package:turn_digital/Features/Home/Data/Services/home_services.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetEventsListResponseModel_0 extends _i1.SmartFake
    implements _i2.GetEventsListResponseModel {
  _FakeGetEventsListResponseModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetEventDetailsResponseModel_1 extends _i1.SmartFake
    implements _i3.GetEventDetailsResponseModel {
  _FakeGetEventDetailsResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeGetOrganizerDetailsReponseModel_2 extends _i1.SmartFake
    implements _i4.GetOrganizerDetailsReponseModel {
  _FakeGetOrganizerDetailsReponseModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

/// A class which mocks [HomeServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeServices extends _i1.Mock implements _i5.HomeServices {
  MockHomeServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.GetEventsListResponseModel> getEventsList(
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getEventsList, [page, limit]),
            returnValue: _i6.Future<_i2.GetEventsListResponseModel>.value(
              _FakeGetEventsListResponseModel_0(
                this,
                Invocation.method(#getEventsList, [page, limit]),
              ),
            ),
          )
          as _i6.Future<_i2.GetEventsListResponseModel>);

  @override
  _i6.Future<_i3.GetEventDetailsResponseModel> getEventDetails(int? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#getEventDetails, [eventId]),
            returnValue: _i6.Future<_i3.GetEventDetailsResponseModel>.value(
              _FakeGetEventDetailsResponseModel_1(
                this,
                Invocation.method(#getEventDetails, [eventId]),
              ),
            ),
          )
          as _i6.Future<_i3.GetEventDetailsResponseModel>);

  @override
  _i6.Future<_i4.GetOrganizerDetailsReponseModel> getOrganizerDetails(
    int? organizerId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getOrganizerDetails, [organizerId]),
            returnValue: _i6.Future<_i4.GetOrganizerDetailsReponseModel>.value(
              _FakeGetOrganizerDetailsReponseModel_2(
                this,
                Invocation.method(#getOrganizerDetails, [organizerId]),
              ),
            ),
          )
          as _i6.Future<_i4.GetOrganizerDetailsReponseModel>);
}
